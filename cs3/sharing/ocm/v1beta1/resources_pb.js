// source: cs3/sharing/ocm/v1beta1/resources.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cs3_app_provider_v1beta1_resources_pb = require('../../../../cs3/app/provider/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_app_provider_v1beta1_resources_pb);
var cs3_identity_user_v1beta1_resources_pb = require('../../../../cs3/identity/user/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_identity_user_v1beta1_resources_pb);
var cs3_storage_provider_v1beta1_resources_pb = require('../../../../cs3/storage/provider/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_storage_provider_v1beta1_resources_pb);
var cs3_types_v1beta1_types_pb = require('../../../../cs3/types/v1beta1/types_pb.js');
goog.object.extend(proto, cs3_types_v1beta1_types_pb);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.AccessMethod', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.AccessMethod.TermCase', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.Protocol', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.Protocol.TermCase', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ReceivedShare', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.Share', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ShareGrant', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ShareId', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ShareKey', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.SharePermissions', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ShareReference', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ShareReference.SpecCase', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ShareState', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.ShareType', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.TransferProtocol', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod', null, global);
goog.exportSymbol('proto.cs3.sharing.ocm.v1beta1.WebappProtocol', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.Share = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.sharing.ocm.v1beta1.Share.repeatedFields_, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.Share, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.Share.displayName = 'proto.cs3.sharing.ocm.v1beta1.Share';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.SharePermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.SharePermissions.displayName = 'proto.cs3.sharing.ocm.v1beta1.SharePermissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.sharing.ocm.v1beta1.ReceivedShare.repeatedFields_, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.ReceivedShare, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.ReceivedShare.displayName = 'proto.cs3.sharing.ocm.v1beta1.ReceivedShare';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.ShareKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.ShareKey.displayName = 'proto.cs3.sharing.ocm.v1beta1.ShareKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.ShareId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.ShareId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.ShareId.displayName = 'proto.cs3.sharing.ocm.v1beta1.ShareId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.sharing.ocm.v1beta1.ShareReference.oneofGroups_);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.ShareReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.ShareReference.displayName = 'proto.cs3.sharing.ocm.v1beta1.ShareReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.ShareGrant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.ShareGrant.displayName = 'proto.cs3.sharing.ocm.v1beta1.ShareGrant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.Protocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.sharing.ocm.v1beta1.Protocol.oneofGroups_);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.Protocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.Protocol.displayName = 'proto.cs3.sharing.ocm.v1beta1.Protocol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.displayName = 'proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.WebappProtocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.WebappProtocol.displayName = 'proto.cs3.sharing.ocm.v1beta1.WebappProtocol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.TransferProtocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.TransferProtocol.displayName = 'proto.cs3.sharing.ocm.v1beta1.TransferProtocol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.sharing.ocm.v1beta1.AccessMethod.oneofGroups_);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.AccessMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.AccessMethod.displayName = 'proto.cs3.sharing.ocm.v1beta1.AccessMethod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.displayName = 'proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.displayName = 'proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.displayName = 'proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.sharing.ocm.v1beta1.Share.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.Share.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.Share} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.Share.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.cs3.sharing.ocm.v1beta1.ShareId.toObject(includeInstance, f),
    resourceId: (f = msg.getResourceId()) && cs3_storage_provider_v1beta1_resources_pb.ResourceId.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    token: jspb.Message.getFieldWithDefault(msg, 4, ""),
    grantee: (f = msg.getGrantee()) && cs3_storage_provider_v1beta1_resources_pb.Grantee.toObject(includeInstance, f),
    owner: (f = msg.getOwner()) && cs3_identity_user_v1beta1_resources_pb.UserId.toObject(includeInstance, f),
    creator: (f = msg.getCreator()) && cs3_identity_user_v1beta1_resources_pb.UserId.toObject(includeInstance, f),
    ctime: (f = msg.getCtime()) && cs3_types_v1beta1_types_pb.Timestamp.toObject(includeInstance, f),
    mtime: (f = msg.getMtime()) && cs3_types_v1beta1_types_pb.Timestamp.toObject(includeInstance, f),
    expiration: (f = msg.getExpiration()) && cs3_types_v1beta1_types_pb.Timestamp.toObject(includeInstance, f),
    shareType: jspb.Message.getFieldWithDefault(msg, 11, 0),
    accessMethodsList: jspb.Message.toObjectList(msg.getAccessMethodsList(),
    proto.cs3.sharing.ocm.v1beta1.AccessMethod.toObject, includeInstance),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share}
 */
proto.cs3.sharing.ocm.v1beta1.Share.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.Share;
  return proto.cs3.sharing.ocm.v1beta1.Share.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.Share} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share}
 */
proto.cs3.sharing.ocm.v1beta1.Share.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.sharing.ocm.v1beta1.ShareId;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.ShareId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new cs3_storage_provider_v1beta1_resources_pb.ResourceId;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.ResourceId.deserializeBinaryFromReader);
      msg.setResourceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 5:
      var value = new cs3_storage_provider_v1beta1_resources_pb.Grantee;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.Grantee.deserializeBinaryFromReader);
      msg.setGrantee(value);
      break;
    case 6:
      var value = new cs3_identity_user_v1beta1_resources_pb.UserId;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.UserId.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 7:
      var value = new cs3_identity_user_v1beta1_resources_pb.UserId;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.UserId.deserializeBinaryFromReader);
      msg.setCreator(value);
      break;
    case 8:
      var value = new cs3_types_v1beta1_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCtime(value);
      break;
    case 9:
      var value = new cs3_types_v1beta1_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setMtime(value);
      break;
    case 10:
      var value = new cs3_types_v1beta1_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiration(value);
      break;
    case 11:
      var value = /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareType} */ (reader.readEnum());
      msg.setShareType(value);
      break;
    case 12:
      var value = new proto.cs3.sharing.ocm.v1beta1.AccessMethod;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.AccessMethod.deserializeBinaryFromReader);
      msg.addAccessMethods(value);
      break;
    case 13:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.Share.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.Share} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.Share.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.sharing.ocm.v1beta1.ShareId.serializeBinaryToWriter
    );
  }
  f = message.getResourceId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storage_provider_v1beta1_resources_pb.ResourceId.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGrantee();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cs3_storage_provider_v1beta1_resources_pb.Grantee.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cs3_identity_user_v1beta1_resources_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getCreator();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cs3_identity_user_v1beta1_resources_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getCtime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cs3_types_v1beta1_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMtime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cs3_types_v1beta1_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiration();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cs3_types_v1beta1_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getShareType();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getAccessMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.cs3.sharing.ocm.v1beta1.AccessMethod.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional ShareId id = 1;
 * @return {?proto.cs3.sharing.ocm.v1beta1.ShareId}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getId = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.ShareId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.ShareId, 1));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.ShareId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.storage.provider.v1beta1.ResourceId resource_id = 2;
 * @return {?proto.cs3.storage.provider.v1beta1.ResourceId}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getResourceId = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.ResourceId} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.ResourceId, 2));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.ResourceId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setResourceId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearResourceId = function() {
  return this.setResourceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasResourceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional cs3.storage.provider.v1beta1.Grantee grantee = 5;
 * @return {?proto.cs3.storage.provider.v1beta1.Grantee}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getGrantee = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.Grantee} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.Grantee, 5));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.Grantee|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setGrantee = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearGrantee = function() {
  return this.setGrantee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasGrantee = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId owner = 6;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getOwner = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.UserId, 6));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId creator = 7;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getCreator = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.UserId, 7));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setCreator = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearCreator = function() {
  return this.setCreator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasCreator = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional cs3.types.v1beta1.Timestamp ctime = 8;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getCtime = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Timestamp, 8));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setCtime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearCtime = function() {
  return this.setCtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasCtime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional cs3.types.v1beta1.Timestamp mtime = 9;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getMtime = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Timestamp, 9));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setMtime = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearMtime = function() {
  return this.setMtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasMtime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional cs3.types.v1beta1.Timestamp expiration = 10;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getExpiration = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Timestamp, 10));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearExpiration = function() {
  return this.setExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasExpiration = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ShareType share_type = 11;
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareType}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getShareType = function() {
  return /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareType} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setShareType = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * repeated AccessMethod access_methods = 12;
 * @return {!Array<!proto.cs3.sharing.ocm.v1beta1.AccessMethod>}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getAccessMethodsList = function() {
  return /** @type{!Array<!proto.cs3.sharing.ocm.v1beta1.AccessMethod>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cs3.sharing.ocm.v1beta1.AccessMethod, 12));
};


/**
 * @param {!Array<!proto.cs3.sharing.ocm.v1beta1.AccessMethod>} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setAccessMethodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.AccessMethod=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.addAccessMethods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.cs3.sharing.ocm.v1beta1.AccessMethod, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearAccessMethodsList = function() {
  return this.setAccessMethodsList([]);
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 13;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 13));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Share.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Share} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Share.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.SharePermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.SharePermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissions: (f = msg.getPermissions()) && cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions.toObject(includeInstance, f),
    reshare: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.SharePermissions}
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.SharePermissions;
  return proto.cs3.sharing.ocm.v1beta1.SharePermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.SharePermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.SharePermissions}
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReshare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.SharePermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.SharePermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions.serializeBinaryToWriter
    );
  }
  f = message.getReshare();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional cs3.storage.provider.v1beta1.ResourcePermissions permissions = 1;
 * @return {?proto.cs3.storage.provider.v1beta1.ResourcePermissions}
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.getPermissions = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.ResourcePermissions} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions, 1));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.ResourcePermissions|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.SharePermissions} returns this
*/
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.SharePermissions} returns this
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool reshare = 2;
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.getReshare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.SharePermissions} returns this
 */
proto.cs3.sharing.ocm.v1beta1.SharePermissions.prototype.setReshare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.ReceivedShare.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.cs3.sharing.ocm.v1beta1.ShareId.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    resourceId: (f = msg.getResourceId()) && cs3_storage_provider_v1beta1_resources_pb.ResourceId.toObject(includeInstance, f),
    grantee: (f = msg.getGrantee()) && cs3_storage_provider_v1beta1_resources_pb.Grantee.toObject(includeInstance, f),
    owner: (f = msg.getOwner()) && cs3_identity_user_v1beta1_resources_pb.UserId.toObject(includeInstance, f),
    creator: (f = msg.getCreator()) && cs3_identity_user_v1beta1_resources_pb.UserId.toObject(includeInstance, f),
    ctime: (f = msg.getCtime()) && cs3_types_v1beta1_types_pb.Timestamp.toObject(includeInstance, f),
    mtime: (f = msg.getMtime()) && cs3_types_v1beta1_types_pb.Timestamp.toObject(includeInstance, f),
    expiration: (f = msg.getExpiration()) && cs3_types_v1beta1_types_pb.Timestamp.toObject(includeInstance, f),
    shareType: jspb.Message.getFieldWithDefault(msg, 10, 0),
    protocolsList: jspb.Message.toObjectList(msg.getProtocolsList(),
    proto.cs3.sharing.ocm.v1beta1.Protocol.toObject, includeInstance),
    state: jspb.Message.getFieldWithDefault(msg, 12, 0),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    resourceType: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.ReceivedShare;
  return proto.cs3.sharing.ocm.v1beta1.ReceivedShare.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.sharing.ocm.v1beta1.ShareId;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.ShareId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new cs3_storage_provider_v1beta1_resources_pb.ResourceId;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.ResourceId.deserializeBinaryFromReader);
      msg.setResourceId(value);
      break;
    case 4:
      var value = new cs3_storage_provider_v1beta1_resources_pb.Grantee;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.Grantee.deserializeBinaryFromReader);
      msg.setGrantee(value);
      break;
    case 5:
      var value = new cs3_identity_user_v1beta1_resources_pb.UserId;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.UserId.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 6:
      var value = new cs3_identity_user_v1beta1_resources_pb.UserId;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.UserId.deserializeBinaryFromReader);
      msg.setCreator(value);
      break;
    case 7:
      var value = new cs3_types_v1beta1_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCtime(value);
      break;
    case 8:
      var value = new cs3_types_v1beta1_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setMtime(value);
      break;
    case 9:
      var value = new cs3_types_v1beta1_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiration(value);
      break;
    case 10:
      var value = /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareType} */ (reader.readEnum());
      msg.setShareType(value);
      break;
    case 11:
      var value = new proto.cs3.sharing.ocm.v1beta1.Protocol;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.Protocol.deserializeBinaryFromReader);
      msg.addProtocols(value);
      break;
    case 12:
      var value = /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 13:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 14:
      var value = /** @type {!proto.cs3.storage.provider.v1beta1.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.ReceivedShare.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.sharing.ocm.v1beta1.ShareId.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResourceId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_storage_provider_v1beta1_resources_pb.ResourceId.serializeBinaryToWriter
    );
  }
  f = message.getGrantee();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cs3_storage_provider_v1beta1_resources_pb.Grantee.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cs3_identity_user_v1beta1_resources_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getCreator();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cs3_identity_user_v1beta1_resources_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getCtime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cs3_types_v1beta1_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMtime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cs3_types_v1beta1_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiration();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cs3_types_v1beta1_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getShareType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getProtocolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.cs3.sharing.ocm.v1beta1.Protocol.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
};


/**
 * optional ShareId id = 1;
 * @return {?proto.cs3.sharing.ocm.v1beta1.ShareId}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getId = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.ShareId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.ShareId, 1));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.ShareId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cs3.storage.provider.v1beta1.ResourceId resource_id = 3;
 * @return {?proto.cs3.storage.provider.v1beta1.ResourceId}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getResourceId = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.ResourceId} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.ResourceId, 3));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.ResourceId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setResourceId = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearResourceId = function() {
  return this.setResourceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasResourceId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.storage.provider.v1beta1.Grantee grantee = 4;
 * @return {?proto.cs3.storage.provider.v1beta1.Grantee}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getGrantee = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.Grantee} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.Grantee, 4));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.Grantee|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setGrantee = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearGrantee = function() {
  return this.setGrantee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasGrantee = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId owner = 5;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getOwner = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.UserId, 5));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId creator = 6;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getCreator = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.UserId, 6));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setCreator = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearCreator = function() {
  return this.setCreator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasCreator = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional cs3.types.v1beta1.Timestamp ctime = 7;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getCtime = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Timestamp, 7));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setCtime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearCtime = function() {
  return this.setCtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasCtime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional cs3.types.v1beta1.Timestamp mtime = 8;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getMtime = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Timestamp, 8));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setMtime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearMtime = function() {
  return this.setMtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasMtime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional cs3.types.v1beta1.Timestamp expiration = 9;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getExpiration = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Timestamp, 9));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearExpiration = function() {
  return this.setExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasExpiration = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ShareType share_type = 10;
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareType}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getShareType = function() {
  return /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareType} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setShareType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * repeated Protocol protocols = 11;
 * @return {!Array<!proto.cs3.sharing.ocm.v1beta1.Protocol>}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getProtocolsList = function() {
  return /** @type{!Array<!proto.cs3.sharing.ocm.v1beta1.Protocol>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cs3.sharing.ocm.v1beta1.Protocol, 11));
};


/**
 * @param {!Array<!proto.cs3.sharing.ocm.v1beta1.Protocol>} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setProtocolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.Protocol=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.addProtocols = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.cs3.sharing.ocm.v1beta1.Protocol, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearProtocolsList = function() {
  return this.setProtocolsList([]);
};


/**
 * optional ShareState state = 12;
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareState}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getState = function() {
  return /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareState} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareState} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 13;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 13));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional cs3.storage.provider.v1beta1.ResourceType resource_type = 14;
 * @return {!proto.cs3.storage.provider.v1beta1.ResourceType}
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.getResourceType = function() {
  return /** @type {!proto.cs3.storage.provider.v1beta1.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ResourceType} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ReceivedShare} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ReceivedShare.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.ShareKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: (f = msg.getOwner()) && cs3_identity_user_v1beta1_resources_pb.UserId.toObject(includeInstance, f),
    resourceId: (f = msg.getResourceId()) && cs3_storage_provider_v1beta1_resources_pb.ResourceId.toObject(includeInstance, f),
    grantee: (f = msg.getGrantee()) && cs3_storage_provider_v1beta1_resources_pb.Grantee.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.ShareKey;
  return proto.cs3.sharing.ocm.v1beta1.ShareKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_identity_user_v1beta1_resources_pb.UserId;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.UserId.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 2:
      var value = new cs3_storage_provider_v1beta1_resources_pb.ResourceId;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.ResourceId.deserializeBinaryFromReader);
      msg.setResourceId(value);
      break;
    case 3:
      var value = new cs3_storage_provider_v1beta1_resources_pb.Grantee;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.Grantee.deserializeBinaryFromReader);
      msg.setGrantee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.ShareKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_identity_user_v1beta1_resources_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getResourceId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storage_provider_v1beta1_resources_pb.ResourceId.serializeBinaryToWriter
    );
  }
  f = message.getGrantee();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_storage_provider_v1beta1_resources_pb.Grantee.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.identity.user.v1beta1.UserId owner = 1;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.getOwner = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.UserId, 1));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.storage.provider.v1beta1.ResourceId resource_id = 2;
 * @return {?proto.cs3.storage.provider.v1beta1.ResourceId}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.getResourceId = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.ResourceId} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.ResourceId, 2));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.ResourceId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.setResourceId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.clearResourceId = function() {
  return this.setResourceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.hasResourceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cs3.storage.provider.v1beta1.Grantee grantee = 3;
 * @return {?proto.cs3.storage.provider.v1beta1.Grantee}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.getGrantee = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.Grantee} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.Grantee, 3));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.Grantee|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.setGrantee = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareKey} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.clearGrantee = function() {
  return this.setGrantee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ShareKey.prototype.hasGrantee = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.ShareId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaqueId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareId}
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.ShareId;
  return proto.cs3.sharing.ocm.v1beta1.ShareId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareId}
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpaqueId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.ShareId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaqueId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string opaque_id = 1;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.prototype.getOpaqueId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareId} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareId.prototype.setOpaqueId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.SpecCase = {
  SPEC_NOT_SET: 0,
  ID: 1,
  KEY: 2
};

/**
 * @return {proto.cs3.sharing.ocm.v1beta1.ShareReference.SpecCase}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.getSpecCase = function() {
  return /** @type {proto.cs3.sharing.ocm.v1beta1.ShareReference.SpecCase} */(jspb.Message.computeOneofCase(this, proto.cs3.sharing.ocm.v1beta1.ShareReference.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.ShareReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.cs3.sharing.ocm.v1beta1.ShareId.toObject(includeInstance, f),
    key: (f = msg.getKey()) && proto.cs3.sharing.ocm.v1beta1.ShareKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareReference}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.ShareReference;
  return proto.cs3.sharing.ocm.v1beta1.ShareReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareReference}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.sharing.ocm.v1beta1.ShareId;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.ShareId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.cs3.sharing.ocm.v1beta1.ShareKey;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.ShareKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.ShareReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.sharing.ocm.v1beta1.ShareId.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.sharing.ocm.v1beta1.ShareKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional ShareId id = 1;
 * @return {?proto.cs3.sharing.ocm.v1beta1.ShareId}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.getId = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.ShareId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.ShareId, 1));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.ShareId|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareReference} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.setId = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cs3.sharing.ocm.v1beta1.ShareReference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareReference} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShareKey key = 2;
 * @return {?proto.cs3.sharing.ocm.v1beta1.ShareKey}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.getKey = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.ShareKey} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.ShareKey, 2));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.ShareKey|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareReference} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.setKey = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cs3.sharing.ocm.v1beta1.ShareReference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareReference} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ShareReference.prototype.hasKey = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.ShareGrant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareGrant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.toObject = function(includeInstance, msg) {
  var f, obj = {
    grantee: (f = msg.getGrantee()) && cs3_storage_provider_v1beta1_resources_pb.Grantee.toObject(includeInstance, f),
    permissions: (f = msg.getPermissions()) && proto.cs3.sharing.ocm.v1beta1.SharePermissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareGrant}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.ShareGrant;
  return proto.cs3.sharing.ocm.v1beta1.ShareGrant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareGrant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareGrant}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_storage_provider_v1beta1_resources_pb.Grantee;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.Grantee.deserializeBinaryFromReader);
      msg.setGrantee(value);
      break;
    case 2:
      var value = new proto.cs3.sharing.ocm.v1beta1.SharePermissions;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.SharePermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.ShareGrant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareGrant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrantee();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_storage_provider_v1beta1_resources_pb.Grantee.serializeBinaryToWriter
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.sharing.ocm.v1beta1.SharePermissions.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.storage.provider.v1beta1.Grantee grantee = 1;
 * @return {?proto.cs3.storage.provider.v1beta1.Grantee}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.getGrantee = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.Grantee} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.Grantee, 1));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.Grantee|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareGrant} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.setGrantee = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareGrant} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.clearGrantee = function() {
  return this.setGrantee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.hasGrantee = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SharePermissions permissions = 2;
 * @return {?proto.cs3.sharing.ocm.v1beta1.SharePermissions}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.getPermissions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.SharePermissions} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.SharePermissions, 2));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.SharePermissions|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareGrant} returns this
*/
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareGrant} returns this
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.ShareGrant.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.TermCase = {
  TERM_NOT_SET: 0,
  WEBDAV_OPTIONS: 1,
  WEBAPP_OPTIONS: 2,
  TRANSFER_OPTIONS: 3,
  GENERIC_OPTIONS: 4
};

/**
 * @return {proto.cs3.sharing.ocm.v1beta1.Protocol.TermCase}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.getTermCase = function() {
  return /** @type {proto.cs3.sharing.ocm.v1beta1.Protocol.TermCase} */(jspb.Message.computeOneofCase(this, proto.cs3.sharing.ocm.v1beta1.Protocol.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.Protocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.Protocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    webdavOptions: (f = msg.getWebdavOptions()) && proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.toObject(includeInstance, f),
    webappOptions: (f = msg.getWebappOptions()) && proto.cs3.sharing.ocm.v1beta1.WebappProtocol.toObject(includeInstance, f),
    transferOptions: (f = msg.getTransferOptions()) && proto.cs3.sharing.ocm.v1beta1.TransferProtocol.toObject(includeInstance, f),
    genericOptions: (f = msg.getGenericOptions()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.Protocol;
  return proto.cs3.sharing.ocm.v1beta1.Protocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.Protocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.deserializeBinaryFromReader);
      msg.setWebdavOptions(value);
      break;
    case 2:
      var value = new proto.cs3.sharing.ocm.v1beta1.WebappProtocol;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.WebappProtocol.deserializeBinaryFromReader);
      msg.setWebappOptions(value);
      break;
    case 3:
      var value = new proto.cs3.sharing.ocm.v1beta1.TransferProtocol;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.TransferProtocol.deserializeBinaryFromReader);
      msg.setTransferOptions(value);
      break;
    case 4:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setGenericOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.Protocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.Protocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebdavOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.serializeBinaryToWriter
    );
  }
  f = message.getWebappOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.sharing.ocm.v1beta1.WebappProtocol.serializeBinaryToWriter
    );
  }
  f = message.getTransferOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs3.sharing.ocm.v1beta1.TransferProtocol.serializeBinaryToWriter
    );
  }
  f = message.getGenericOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional WebDAVProtocol webdav_options = 1;
 * @return {?proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.getWebdavOptions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol, 1));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.setWebdavOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cs3.sharing.ocm.v1beta1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.clearWebdavOptions = function() {
  return this.setWebdavOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.hasWebdavOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WebappProtocol webapp_options = 2;
 * @return {?proto.cs3.sharing.ocm.v1beta1.WebappProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.getWebappOptions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.WebappProtocol} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.WebappProtocol, 2));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.WebappProtocol|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.setWebappOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cs3.sharing.ocm.v1beta1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.clearWebappOptions = function() {
  return this.setWebappOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.hasWebappOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TransferProtocol transfer_options = 3;
 * @return {?proto.cs3.sharing.ocm.v1beta1.TransferProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.getTransferOptions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.TransferProtocol} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.TransferProtocol, 3));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.TransferProtocol|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.setTransferOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cs3.sharing.ocm.v1beta1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.clearTransferOptions = function() {
  return this.setTransferOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.hasTransferOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque generic_options = 4;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.getGenericOptions = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 4));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
*/
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.setGenericOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cs3.sharing.ocm.v1beta1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.clearGenericOptions = function() {
  return this.setGenericOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.Protocol.prototype.hasGenericOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    sharedSecret: jspb.Message.getFieldWithDefault(msg, 1, ""),
    permissions: (f = msg.getPermissions()) && proto.cs3.sharing.ocm.v1beta1.SharePermissions.toObject(includeInstance, f),
    uri: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol;
  return proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSharedSecret(value);
      break;
    case 2:
      var value = new proto.cs3.sharing.ocm.v1beta1.SharePermissions;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.SharePermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSharedSecret();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.sharing.ocm.v1beta1.SharePermissions.serializeBinaryToWriter
    );
  }
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string shared_secret = 1;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.getSharedSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.setSharedSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SharePermissions permissions = 2;
 * @return {?proto.cs3.sharing.ocm.v1beta1.SharePermissions}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.getPermissions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.SharePermissions} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.SharePermissions, 2));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.SharePermissions|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} returns this
*/
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string uri = 3;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVProtocol.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.WebappProtocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebappProtocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    uriTemplate: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebappProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.WebappProtocol;
  return proto.cs3.sharing.ocm.v1beta1.WebappProtocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebappProtocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebappProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUriTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.WebappProtocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebappProtocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUriTemplate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uri_template = 1;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.prototype.getUriTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebappProtocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.WebappProtocol.prototype.setUriTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.TransferProtocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    sharedSecret: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.TransferProtocol;
  return proto.cs3.sharing.ocm.v1beta1.TransferProtocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol}
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSharedSecret(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceUri(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.TransferProtocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSharedSecret();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string shared_secret = 1;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.getSharedSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.setSharedSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source_uri = 2;
 * @return {string}
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.getSourceUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.setSourceUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 size = 3;
 * @return {number}
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.TransferProtocol} returns this
 */
proto.cs3.sharing.ocm.v1beta1.TransferProtocol.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.TermCase = {
  TERM_NOT_SET: 0,
  WEBDAV_OPTIONS: 1,
  WEBAPP_OPTIONS: 2,
  TRANSFER_OPTIONS: 3,
  GENERIC_OPTIONS: 4
};

/**
 * @return {proto.cs3.sharing.ocm.v1beta1.AccessMethod.TermCase}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.getTermCase = function() {
  return /** @type {proto.cs3.sharing.ocm.v1beta1.AccessMethod.TermCase} */(jspb.Message.computeOneofCase(this, proto.cs3.sharing.ocm.v1beta1.AccessMethod.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.AccessMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.toObject = function(includeInstance, msg) {
  var f, obj = {
    webdavOptions: (f = msg.getWebdavOptions()) && proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.toObject(includeInstance, f),
    webappOptions: (f = msg.getWebappOptions()) && proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.toObject(includeInstance, f),
    transferOptions: (f = msg.getTransferOptions()) && proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.toObject(includeInstance, f),
    genericOptions: (f = msg.getGenericOptions()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.AccessMethod;
  return proto.cs3.sharing.ocm.v1beta1.AccessMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.deserializeBinaryFromReader);
      msg.setWebdavOptions(value);
      break;
    case 2:
      var value = new proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.deserializeBinaryFromReader);
      msg.setWebappOptions(value);
      break;
    case 3:
      var value = new proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.deserializeBinaryFromReader);
      msg.setTransferOptions(value);
      break;
    case 4:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setGenericOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.AccessMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebdavOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.serializeBinaryToWriter
    );
  }
  f = message.getWebappOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.serializeBinaryToWriter
    );
  }
  f = message.getTransferOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.serializeBinaryToWriter
    );
  }
  f = message.getGenericOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional WebDAVAccessMethod webdav_options = 1;
 * @return {?proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.getWebdavOptions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod, 1));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
*/
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.setWebdavOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cs3.sharing.ocm.v1beta1.AccessMethod.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.clearWebdavOptions = function() {
  return this.setWebdavOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.hasWebdavOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WebappAccessMethod webapp_options = 2;
 * @return {?proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.getWebappOptions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod, 2));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
*/
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.setWebappOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cs3.sharing.ocm.v1beta1.AccessMethod.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.clearWebappOptions = function() {
  return this.setWebappOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.hasWebappOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TransferAccessMethod transfer_options = 3;
 * @return {?proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.getTransferOptions = function() {
  return /** @type{?proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod, 3));
};


/**
 * @param {?proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
*/
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.setTransferOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cs3.sharing.ocm.v1beta1.AccessMethod.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.clearTransferOptions = function() {
  return this.setTransferOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.hasTransferOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque generic_options = 4;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.getGenericOptions = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 4));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
*/
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.setGenericOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cs3.sharing.ocm.v1beta1.AccessMethod.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.AccessMethod} returns this
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.clearGenericOptions = function() {
  return this.setGenericOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.AccessMethod.prototype.hasGenericOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissions: (f = msg.getPermissions()) && cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod;
  return proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions;
      reader.readMessage(value,cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.storage.provider.v1beta1.ResourcePermissions permissions = 2;
 * @return {?proto.cs3.storage.provider.v1beta1.ResourcePermissions}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.prototype.getPermissions = function() {
  return /** @type{?proto.cs3.storage.provider.v1beta1.ResourcePermissions} */ (
    jspb.Message.getWrapperField(this, cs3_storage_provider_v1beta1_resources_pb.ResourcePermissions, 2));
};


/**
 * @param {?proto.cs3.storage.provider.v1beta1.ResourcePermissions|undefined} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod} returns this
*/
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod} returns this
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.ocm.v1beta1.WebDAVAccessMethod.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewMode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod;
  return proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {!proto.cs3.app.provider.v1beta1.ViewMode} */ (reader.readEnum());
      msg.setViewMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViewMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional cs3.app.provider.v1beta1.ViewMode view_mode = 2;
 * @return {!proto.cs3.app.provider.v1beta1.ViewMode}
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.prototype.getViewMode = function() {
  return /** @type {!proto.cs3.app.provider.v1beta1.ViewMode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cs3.app.provider.v1beta1.ViewMode} value
 * @return {!proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod} returns this
 */
proto.cs3.sharing.ocm.v1beta1.WebappAccessMethod.prototype.setViewMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod;
  return proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod}
 */
proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.ocm.v1beta1.TransferAccessMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.cs3.sharing.ocm.v1beta1.ShareState = {
  SHARE_STATE_INVALID: 0,
  SHARE_STATE_PENDING: 1,
  SHARE_STATE_ACCEPTED: 2,
  SHARE_STATE_REJECTED: 3
};

/**
 * @enum {number}
 */
proto.cs3.sharing.ocm.v1beta1.ShareType = {
  SHARE_TYPE_INVALID: 0,
  SHARE_TYPE_USER: 1,
  SHARE_TYPE_GROUP: 2
};

goog.object.extend(exports, proto.cs3.sharing.ocm.v1beta1);
